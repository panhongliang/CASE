/**
 * Created by Administrator on 2016-08-23.
 *
 * 强引用
 * 软引用  SoftReference
 * 用来描述一些还有用，但是非必需的对象，这于软引用关联的对象
 *  在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中，并进行第二次回收。
 *  如果这次回收还是没有足够的内存，才会抛出内存溢出异常
 * 弱引用 WeakReference
 * 也是用来描述非必要的对象，但是它的强度与软引用更弱一些。
 * 被弱引用关联的对象只能生存到下一次垃圾收集发生之前。当垃圾收集器工作时，无论
 * 当前的内存是否足够，都会回收掉只被弱引用关联的对象。
 * 虚引用 PhantomReference
 * 它是最弱的一种引用，一个对象是否有虚引用的存在，完全不会对其生存时间构成影响
 * 也无法通过虚引用来获取一个对象的实例。把一个对象设置成虚引用的唯一目的就是希望
 * 能在这个对象被收集器回收时收到一 个系统通知。
 */
package com.phl.reference;